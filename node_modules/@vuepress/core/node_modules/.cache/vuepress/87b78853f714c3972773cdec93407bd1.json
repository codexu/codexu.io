{"remainingRequest":"/Users/xu/Git/codexu.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xu/Git/codexu.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/xu/Git/codexu.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/xu/Git/codexu.github.io/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/xu/Git/codexu.github.io/docs/install.md?vue&type=template&id=01847f30&","dependencies":[{"path":"/Users/xu/Git/codexu.github.io/docs/install.md","mtime":1560407326889},{"path":"/Users/xu/Git/codexu.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1560405525951},{"path":"/Users/xu/Git/codexu.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1560405527383},{"path":"/Users/xu/Git/codexu.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1560405525951},{"path":"/Users/xu/Git/codexu.github.io/node_modules/vue-loader/lib/index.js","mtime":1560405527383},{"path":"/Users/xu/Git/codexu.github.io/node_modules/@vuepress/markdown-loader/index.js","mtime":1560405526968}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}